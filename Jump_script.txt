local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local SendDataEvent = ReplicatedStorage:WaitForChild("SendData")
local jumpIncrease = 2 -- How much the jump height increases per jump
local currentJumpHeight = 50 -- Default jump height

-- Wait for leaderstats and JumpHeight value
local leaderstats = player:WaitForChild("leaderstats")
local jumpValue = leaderstats:WaitForChild("JumpHeight") -- IntValue

-- Set initial jump height
humanoid.JumpHeight = jumpValue.Value

-- Listen for jump event
humanoid.StateChanged:Connect(function(_, newState)
	if newState == Enum.HumanoidStateType.Jumping then
		currentJumpHeight = humanoid.JumpHeight + jumpIncrease -- Increase height
		humanoid.JumpHeight = currentJumpHeight -- Apply new height
		jumpValue.Value = currentJumpHeight -- Update the IntValue

		-- Send updated JumpHeight to the server
		SendDataEvent:FireServer(currentJumpHeight)
	end
end)

-- Receive the initial jump height from the server
SendDataEvent.OnClientEvent:Connect(function(savedJumpHeight)
	currentJumpHeight = savedJumpHeight
	humanoid.JumpHeight = savedJumpHeight
end)








